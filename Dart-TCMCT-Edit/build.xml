<?xml version="1.0"?>

<project name="TCMCT" basedir="." default="usage">
	<property file="build.properties"/> 
	<property name="src.dir" value="src"/>
	<property name="web.dir" value="."/>
	<property name="build.dir" value="WEB-INF/classes"/>
	<property name="name" value="TCMCTOntoEdit"/>
	<property name="war.dir" value="war"/>
		
	<path id="master-classpath">
		<fileset dir="${web.dir}/WEB-INF/lib">
			<include name="*.jar"/>
		</fileset>
		<!-- We need the servlet API classes:        -->
		<!--   for Tomcat 4.1 use servlet.jar        -->
		<!--   for Tomcat 5.0 use servlet-api.jar    -->
		<!--   for Other app server - check the docs -->
		<fileset dir="${appserver.home}/common/lib">
			<include name="servlet*.jar"/>
		</fileset>        
		<pathelement path="${build.dir}"/>
	</path>
	<target name="usage">
		<echo message=""/>
		<echo message="${name} build file"/>
		<echo message="-----------------------------------"/>
		<echo message=""/>
		<echo message="Available targets are:"/>
		<echo message=""/>
		<echo message="build     --> Build the application"/>
		<echo message="deploy    --> Deploy application as directory"/>
		<echo message="deploywar --> Deploy application as a WAR file"/>
		<echo message="install   --> Install application in Tomcat"/>
		<echo message="reload    --> Reload application in Tomcat"/>
		<echo message="start     --> Start Tomcat application"/>
		<echo message="stop      --> Stop Tomcat application"/>
		<echo message="list      --> List Tomcat applications"/>
		<echo message=""/>
	</target>    
	<target name="build" description="Compile main source tree java files">
		<mkdir dir="${build.dir}"/>
		<javac destdir="${build.dir}" target="1.5" debug="true" 
			deprecation="false" optimize="false" failonerror="true">
			<src path="${src.dir}"/>
			<classpath refid="master-classpath"/>
			</javac>
	</target>
    <target name="clean" description="Clean output directories">
        <delete>
            <fileset dir="${build.dir}">
                <include name="**/*.class"/>
            </fileset>
        </delete>
    </target>
<!--
	<target name="deploydebug" depends="build" description="Deploy application to workspace for debug">
		<copy todir="${basedir}" preservelastmodified="true">
			<fileset dir="${web.dir}">
				<include name="**/*.*"/>
			</fileset>
		</copy>
	</target>


	<target name="build" description="Compile main source tree java files into class files, generate jar files">
		<mkdir dir="${build.dir}"/>
		<javac destdir="${build.dir}" source="1.5" target="1.5" debug="true"
				deprecation="false" optimize="false" failonerror="true">
			<src path="${src.dir}"/>
			<classpath refid="all-libs"/>
		</javac>
		<copy todir="${build.dir}" preservelastmodified="true">
			<fileset dir="${src.dir}">
				<include name="**/*.xml"/>
			</fileset>
		</copy>
		<jar jarfile="${weblib.dir}/${name}.jar" compress="true" basedir="${build.dir}"/>
		<copy file="${weblib.dir}/${name}.jar" tofile="${client.dir}/${name}.jar"/>
	</target>
-->
	
	<target name="warfile" depends="build" description="Build the web application archive">
		<mkdir dir="${war.dir}"/>
		<war warfile="${war.dir}/${name}.war" basedir="${web.dir}" webxml="WEB-INF/web.xml">
			<include name="*"/>
			<include name="demo/**"/>
			<include name="script/**"/>
			<include name="themes/**"/>
			<include name="WEB-INF/**"/>
			<include name="WEB-INF/classes/**"/>
			<include name="WEB-INF/jsp/**"/>
			<exclude name="src/**"/>
			<exclude name="work/**"/>
			<exclude name="**/.*"/>
		</war>
	</target>
	<!--
	<target name="deploy" depends="build" description="Deploy application">
		<copy todir="${deploy.path}/${name}" preservelastmodified="true">
			<fileset dir="${web.dir}">
				<include name="**/*.*"/>
			</fileset>
		</copy>
	</target>
	<target name="deploywar" depends="build" description="Deploy application as a WAR file">
		<war destfile="${name}.war" 
			webxml="WEB-INF/web.xml"> 
			<fileset dir="${web.dir}">
				<include name="**/*.*"/>
			</fileset>
		</war>
		<copy todir="${deploy.path}" preservelastmodified="true">
			<fileset dir="."> 
				<include name="*.war"/>
			</fileset>
		</copy>
	</target>
	<target name="install" description="Install application in Tomcat">   
		<install url="${tomcat.manager.url}"            
			username="${tomcat.manager.username}"      
			password="${tomcat.manager.password}"         
			path="/${name}"           
			war="${name}"/>   
	</target>   
	<target name="reload" description="Reload application in Tomcat">
		<reload url="${tomcat.manager.url}"        
			username="${tomcat.manager.username}"    
			password="${tomcat.manager.password}"        
			path="/${name}"/>  
	</target> 
	<target name="start" description="Start Tomcat application">   
		<start url="${tomcat.manager.url}"    
			username="${tomcat.manager.username}" 
			password="${tomcat.manager.password}"   
			path="/${name}"/>  
	</target>  
	<target name="stop" description="Stop Tomcat application">
		<stop url="${tomcat.manager.url}"       
			username="${tomcat.manager.username}" 
			password="${tomcat.manager.password}"     
			path="/${name}"/>  
	</target> 
	<target name="list" description="List Tomcat applications"> 
		<list url="${tomcat.manager.url}" 
			username="${tomcat.manager.username}"   
			password="${tomcat.manager.password}"/>   
	</target>
    <target name="undeploy" description="Un-Deploy application">
        <delete>
            <fileset dir="${deploy.path}/${name}">
                <include name="**/*.*"/>
            </fileset>
        </delete>
    </target>
	-->
	<!-- End Tomcat tasks -->
    <target name="junit" depends="build" description="Run JUnit Tests">
        <junit printsummary="on"
               fork="false"
               haltonfailure="false"
               failureproperty="tests.failed"
               showoutput="true">
            <classpath refid="master-classpath"/>
            <formatter type="brief" usefile="false"/>

            <batchtest>
                <fileset dir="${build.dir}">
                    <include name="**/Test*.*"/>
                </fileset>
            </batchtest>

        </junit>

        <fail if="tests.failed">
        	tests.failed=${tests.failed}
        ***********************************************************
        ***********************************************************
        ****  One or more tests failed!  Check the output ...  ****
        ***********************************************************
        ***********************************************************
        </fail>
    </target>
</project>